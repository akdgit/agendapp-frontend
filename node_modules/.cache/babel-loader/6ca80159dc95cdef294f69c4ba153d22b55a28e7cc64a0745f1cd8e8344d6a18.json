{"ast":null,"code":"var _jsxFileName = \"/home/juancarlos/Documentos/react/reactProjects/agendapp/client/src/components/TaskArea.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Tooltip } from \"react-tooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskArea() {\n  _s();\n  const [showForm, setShowForm] = useState(false);\n  const [task, setTask] = useState({\n    description: \"\",\n    // Cambié 'title' a 'description'\n    startDate: \"\",\n    endDate: \"\"\n  });\n  const [taskList, setTaskList] = useState([]);\n  const [userId, setUserId] = useState(null); // Estado para el ID del usuario autenticado\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isEditing, setIsEditing] = useState(false); // Estado para indicar si estamos editando\n  const [editingTaskId, setEditingTaskId] = useState(null);\n\n  // Función para alternar el formulario\n  const handleToggleForm = () => {\n    setShowForm(!showForm);\n  };\n\n  // Manejo de los cambios en los inputs\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTask({\n      ...task,\n      [name]: value\n    });\n  };\n\n  // Manejo del botón de cancelar\n  const handleCancel = () => {\n    setTask({\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\"\n    });\n    setShowForm(false);\n    setIsEditing(false); // Resetear el estado de edición\n    setEditingTaskId(null); // Limpiar el ID de la tarea en edición\n  };\n\n  //Funcion para editar tarea.\n  const hanleEditTask = task => {\n    setTask({\n      description: task.description,\n      startDate: new Date(task.start_date).toISOString().slice(0, 16),\n      // Formatea a yyyy-MM-ddTHH:mm\n      endDate: new Date(task.end_date).toISOString().slice(0, 16)\n    });\n    setEditingTaskId(task.id); // Establecer el ID de la tarea que estamos editando\n    setIsEditing(true); // Cambiar a modo de edición\n    setShowForm(true);\n    console.log(\"El iid es: \", setEditingTaskId);\n  };\n\n  // Función para enviar la tarea (POST)\n  /*const handleSubmit = async (e) => {\n      e.preventDefault();  // Evita el comportamiento por defecto del formulario\n       if (!userId) {\n          console.error(\"User ID is not defined.\");\n          return;\n      }\n       const newTask = {\n          description: task.description,\n          start_date: task.startDate,\n          end_date: task.endDate,\n          user_id: userId  // Incluye el user_id del usuario logeado\n      };\n       try {\n          let response;\n          if (isEditing) {\n              response = await fetch(\"http://localhost:4000/api/activities/${editingTaskId}\", {\n                  method: \"PATCH\",\n                  headers: {\n                      \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify(newTask)\n              });\n          } else {\n              response = await fetch(\"http://localhost:4000/api/activities\", {\n                  method: \"POST\",\n                  headers: {\n                      \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify(newTask)\n              });\n          }\n           if (response.ok) {\n              const result = await response.json();\n              console.log(\"Tarea añadida:\", result);\n              // Actualizar la lista de tareas después de añadir la nueva tarea\n              fetchTasks();\n              // Limpiar el formulario\n              handleCancel();\n          } else {\n              console.error(\"Failed to add task:\", response.status);\n          }\n      } catch (error) {\n          console.error(\"Error while adding task:\", error);\n      }\n  };*/\n\n  // Función para enviar o actualizar la tarea\n  const handleSubmit = async e => {\n    e.preventDefault(); // Evita el comportamiento por defecto del formulario\n\n    if (!userId) {\n      console.error(\"User ID is not defined.\");\n      return;\n    }\n    const newTask = {\n      description: task.description,\n      start_date: task.startDate,\n      end_date: task.endDate,\n      user_id: userId // Incluye el user_id del usuario logeado\n    };\n    try {\n      let response;\n      if (isEditing) {\n        console.log(`Editando tarea con ID: ${editingTaskId}`); // Log para verificar el ID\n        console.log(\"Datos enviados:\", newTask); // Log para verificar los datos enviados\n\n        response = await fetch(`http://localhost:4000/api/activities/${editingTaskId}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(newTask)\n        });\n      } else {\n        response = await fetch(\"http://localhost:4000/api/activities\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(newTask)\n        });\n      }\n      if (response.ok) {\n        const result = await response.json();\n        console.log(isEditing ? \"Tarea actualizada:\" : \"Tarea añadida:\", result);\n        fetchTasks(); // Actualizar la lista de tareas\n        handleCancel(); // Limpiar el formulario\n      } else {\n        console.error(isEditing ? \"Failed to update task:\" : \"Failed to add task:\", response.status);\n      }\n    } catch (error) {\n      console.error(isEditing ? \"Error while updating task:\" : \"Error while adding task:\", error);\n    }\n  };\n\n  // Función para obtener las tareas del usuario autenticado\n  const fetchTasks = async () => {\n    if (!userId) {\n      console.error(\"User ID is not defined. Cannot fetch tasks.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:4000/api/act-user/${userId}`);\n      const data = await response.json();\n      if (response.ok) {\n        setTaskList(data); // Guardar la lista de tareas en el estado\n      } else {\n        console.error(\"Failed to fetch tasks:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n  useEffect(() => {\n    // Recuperar el userId del localStorage\n    const storedUserId = localStorage.getItem(\"userId\");\n\n    // Verificar si existe el userId almacenado\n    if (storedUserId) {\n      setUserId(storedUserId);\n    } else {\n      console.error(\"No user ID found in localStorage\");\n    }\n  }, []);\n  useEffect(() => {\n    if (userId) {\n      fetchTasks(); // Llamar la función de tareas si el userId es válido\n    } else {\n      console.error(\"User ID is missing or undefined.\");\n    }\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addbutton-and-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"add-task\",\n        onClick: handleToggleForm,\n        children: \"Agregar nueva tarea +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: `form-task ${showForm ? 'show' : ''}`,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"in-task\",\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"\\xBFQu\\xE9 vas a agendar?\",\n          value: task.description,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Inicia:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"sh-date\",\n            type: \"datetime-local\",\n            name: \"startDate\",\n            value: task.startDate,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Termina:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"sh-date\",\n            type: \"datetime-local\",\n            name: \"endDate\",\n            value: task.endDate,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          type: \"submit\",\n          children: [isEditing ? \"Actualizar\" : \"Agregar\", \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel\",\n          onClick: handleCancel,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: taskList.length > 0 ? taskList.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"desctask\",\n          children: [\" \", task.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"horafecha\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Desde:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 54\n          }, this), \" \", new Date(task.start_date).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"horafecha\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Hasta:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 54\n          }, this), \" \", new Date(task.end_date).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"botones\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined\",\n            role: \"button\",\n            \"data-tooltip-id\": \"complete-tooltip\",\n            \"data-tooltip-content\": \"Completar Tarea\",\n            children: \"done_all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined\",\n            role: \"button\",\n            \"data-tooltip\": \"Editar Tarea\",\n            \"data-tooltip-id\": \"edit-tooltip\",\n            \"data-tooltip-content\": \"Editar Tarea\",\n            onClick: () => hanleEditTask(task),\n            children: \"edit_note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined\",\n            role: \"button\",\n            \"data-tooltip-id\": \"delete-tooltip\",\n            \"data-tooltip-content\": \"Eliminar Tarea\",\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-task\",\n        children: \"No hay tareas pendientes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      id: \"complete-tooltip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      id: \"edit-tooltip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      id: \"delete-tooltip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskArea, \"ceRXMNepoXCXfRlG/V3oh5joB3Q=\");\n_c = TaskArea;\nexport default TaskArea;\nvar _c;\n$RefreshReg$(_c, \"TaskArea\");","map":{"version":3,"names":["React","useState","useEffect","Tooltip","jsxDEV","_jsxDEV","TaskArea","_s","showForm","setShowForm","task","setTask","description","startDate","endDate","taskList","setTaskList","userId","setUserId","selectedTask","setSelectedTask","isEditing","setIsEditing","editingTaskId","setEditingTaskId","handleToggleForm","handleInputChange","e","name","value","target","handleCancel","hanleEditTask","Date","start_date","toISOString","slice","end_date","id","console","log","handleSubmit","preventDefault","error","newTask","user_id","response","fetch","method","headers","body","JSON","stringify","ok","result","json","fetchTasks","status","data","storedUserId","localStorage","getItem","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","length","map","index","toLocaleString","role","_c","$RefreshReg$"],"sources":["/home/juancarlos/Documentos/react/reactProjects/agendapp/client/src/components/TaskArea.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Tooltip } from \"react-tooltip\";\n\nfunction TaskArea() {\n    const [showForm, setShowForm] = useState(false);\n    const [task, setTask] = useState({\n        description: \"\",  // Cambié 'title' a 'description'\n        startDate: \"\",\n        endDate: \"\"\n    });\n    const [taskList, setTaskList] = useState([]);  \n    const [userId, setUserId] = useState(null);  // Estado para el ID del usuario autenticado\n    const [selectedTask, setSelectedTask] = useState(null);\n    const [isEditing, setIsEditing] = useState(false);  // Estado para indicar si estamos editando\n    const [editingTaskId, setEditingTaskId] = useState(null);\n    \n    // Función para alternar el formulario\n    const handleToggleForm = () => {\n        setShowForm(!showForm);\n    };\n\n    // Manejo de los cambios en los inputs\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setTask({\n            ...task,\n            [name]: value\n        });\n    };\n\n    // Manejo del botón de cancelar\n    const handleCancel = () => {\n        setTask({\n            description: \"\",\n            startDate: \"\",\n            endDate: \"\"\n        });\n        setShowForm(false);\n        setIsEditing(false);  // Resetear el estado de edición\n        setEditingTaskId(null);  // Limpiar el ID de la tarea en edición\n    };\n\n        //Funcion para editar tarea.\n        const hanleEditTask = (task) => {\n            setTask({\n                description: task.description,\n                startDate: new Date(task.start_date).toISOString().slice(0, 16),  // Formatea a yyyy-MM-ddTHH:mm\n                endDate: new Date(task.end_date).toISOString().slice(0, 16)\n            });\n            setEditingTaskId(task.id);  // Establecer el ID de la tarea que estamos editando\n            setIsEditing(true);  // Cambiar a modo de edición\n            setShowForm(true);  \n            console.log(\"El iid es: \", setEditingTaskId);\n        };\n\n    // Función para enviar la tarea (POST)\n    /*const handleSubmit = async (e) => {\n        e.preventDefault();  // Evita el comportamiento por defecto del formulario\n\n        if (!userId) {\n            console.error(\"User ID is not defined.\");\n            return;\n        }\n\n        const newTask = {\n            description: task.description,\n            start_date: task.startDate,\n            end_date: task.endDate,\n            user_id: userId  // Incluye el user_id del usuario logeado\n        };\n\n        try {\n            let response;\n            if (isEditing) {\n                response = await fetch(\"http://localhost:4000/api/activities/${editingTaskId}\", {\n                    method: \"PATCH\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(newTask)\n                });\n            } else {\n                response = await fetch(\"http://localhost:4000/api/activities\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(newTask)\n                });\n            }\n\n            if (response.ok) {\n                const result = await response.json();\n                console.log(\"Tarea añadida:\", result);\n                // Actualizar la lista de tareas después de añadir la nueva tarea\n                fetchTasks();\n                // Limpiar el formulario\n                handleCancel();\n            } else {\n                console.error(\"Failed to add task:\", response.status);\n            }\n        } catch (error) {\n            console.error(\"Error while adding task:\", error);\n        }\n    };*/\n\n    // Función para enviar o actualizar la tarea\n    const handleSubmit = async (e) => {\n        e.preventDefault();  // Evita el comportamiento por defecto del formulario\n    \n        if (!userId) {\n            console.error(\"User ID is not defined.\");\n            return;\n        }\n    \n        const newTask = {\n            description: task.description,\n            start_date: task.startDate,\n            end_date: task.endDate,\n            user_id: userId  // Incluye el user_id del usuario logeado\n        };\n    \n        try {\n            let response;\n            if (isEditing) {\n                console.log(`Editando tarea con ID: ${editingTaskId}`);  // Log para verificar el ID\n                console.log(\"Datos enviados:\", newTask);  // Log para verificar los datos enviados\n    \n                response = await fetch(`http://localhost:4000/api/activities/${editingTaskId}`, {\n                    method: \"PATCH\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(newTask)\n                });\n            } else {\n                response = await fetch(\"http://localhost:4000/api/activities\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(newTask)\n                });\n            }\n    \n            if (response.ok) {\n                const result = await response.json();\n                console.log(isEditing ? \"Tarea actualizada:\" : \"Tarea añadida:\", result);\n                fetchTasks();  // Actualizar la lista de tareas\n                handleCancel();  // Limpiar el formulario\n            } else {\n                console.error(isEditing ? \"Failed to update task:\" : \"Failed to add task:\", response.status);\n            }\n        } catch (error) {\n            console.error(isEditing ? \"Error while updating task:\" : \"Error while adding task:\", error);\n        }\n    };    \n\n    // Función para obtener las tareas del usuario autenticado\n    const fetchTasks = async () => {\n        if (!userId) {\n            console.error(\"User ID is not defined. Cannot fetch tasks.\");\n            return;\n        }\n        try {\n            const response = await fetch(`http://localhost:4000/api/act-user/${userId}`);\n            const data = await response.json();\n    \n            if (response.ok) {\n                setTaskList(data);  // Guardar la lista de tareas en el estado\n            } else {\n                console.error(\"Failed to fetch tasks:\", data);\n            }\n        } catch (error) {\n            console.error(\"Error fetching tasks:\", error);\n        }\n    };\n\n    useEffect(() => {\n        // Recuperar el userId del localStorage\n        const storedUserId = localStorage.getItem(\"userId\");\n    \n        // Verificar si existe el userId almacenado\n        if (storedUserId) {\n            setUserId(storedUserId);\n        } else {\n            console.error(\"No user ID found in localStorage\");\n        }\n    }, []);\n    \n    useEffect(() => {\n        if (userId) {\n            fetchTasks();  // Llamar la función de tareas si el userId es válido\n        } else {\n            console.error(\"User ID is missing or undefined.\");\n        }\n    }, [userId]);\n\n    return (\n        <div className=\"task-container\">\n            <div className=\"addbutton-and-form\">\n                <span className=\"add-task\" onClick={handleToggleForm}>Agregar nueva tarea +</span>\n                <form className={`form-task ${showForm ? 'show' : ''}`} onSubmit={handleSubmit}>\n                    <input \n                        className=\"in-task\"\n                        type=\"text\"\n                        name=\"description\"\n                        placeholder=\"¿Qué vas a agendar?\"\n                        value={task.description}\n                        onChange={handleInputChange}\n                        required\n                    />\n                    <label>\n                        Inicia: \n                        <input \n                            className=\"sh-date\"\n                            type=\"datetime-local\"\n                            name=\"startDate\"\n                            value={task.startDate}\n                            onChange={handleInputChange}\n                            required\n                        />\n                    </label>\n                    <label>\n                        Termina: \n                        <input \n                            className=\"sh-date\"\n                            type=\"datetime-local\"\n                            name=\"endDate\"\n                            value={task.endDate}\n                            onChange={handleInputChange}\n                            required\n                        />\n                    </label>\n                    <button className=\"add-button\" type=\"submit\">\n                        {isEditing ? \"Actualizar\" : \"Agregar\"}  {/* Cambia el texto dependiendo de si estamos editando */}\n                    </button>\n                    <button \n                        type=\"button\"\n                        className=\"cancel\"\n                        onClick={handleCancel}\n                    >\n                        Cancelar\n                    </button>\n                </form>\n            </div>\n\n            <div className=\"task-list\">\n                {taskList.length > 0 ? (\n                    taskList.map((task, index) => (\n                        <div key={index} className=\"task-item\">\n                            <p className=\"desctask\"> {task.description}</p>\n                            <p className=\"horafecha\"><strong>Desde:</strong> {new Date(task.start_date).toLocaleString()}</p>\n                            <p className=\"horafecha\"><strong>Hasta:</strong> {new Date(task.end_date).toLocaleString()}</p>\n                            <div className=\"botones\">\n                                <span \n                                    className=\"material-symbols-outlined\" \n                                    role=\"button\"\n                                    data-tooltip-id=\"complete-tooltip\"\n                                    data-tooltip-content=\"Completar Tarea\"\n                                    >\n                                        done_all\n                                </span>\n\n                                <span \n                                    className=\"material-symbols-outlined\" \n                                    role=\"button\" data-tooltip=\"Editar Tarea\"\n                                    data-tooltip-id=\"edit-tooltip\"\n                                    data-tooltip-content=\"Editar Tarea\"\n                                    onClick={() => hanleEditTask(task)}\n                                    >\n                                        edit_note\n                                </span>\n\n                                <span  \n                                    className=\"material-symbols-outlined\" \n                                    role=\"button\" \n                                    data-tooltip-id=\"delete-tooltip\"\n                                    data-tooltip-content=\"Eliminar Tarea\"\n                                    >\n                                        delete\n                                </span>\n                            </div>\n                        </div>\n                    ))\n                ) : (\n                    <p className=\"no-task\">No hay tareas pendientes</p>\n                )}\n            </div>\n            <Tooltip id=\"complete-tooltip\" />\n            <Tooltip id=\"edit-tooltip\" />\n            <Tooltip id=\"delete-tooltip\" />\n        </div>\n    );\n}\n\nexport default TaskArea;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}