{"ast":null,"code":"var _jsxFileName = \"/home/juancarlos/Documentos/react/reactProjects/agendapp/client/src/components/FormSendEmail.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport RecuperarContraseña from \"./RecuperarContraseña\"; // Asegúrate de tener este componente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormSendEmail({\n  onClose\n}) {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [showRecuperarContraseña, setShowRecuperarContraseña] = useState(false);\n  const handleSendEmail = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/api/users/send-recovery-code\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        Swal.fire(\"Correo Enviado\", \"Revisa tu correo para el código de recuperación.\", \"success\");\n        setShowRecuperarContraseña(true); // Mostrar el formulario para ingresar el código\n      } else {\n        Swal.fire(\"Error\", data.message, \"error\");\n      }\n    } catch (error) {\n      console.error(\"Error al enviar el correo:\", error);\n      Swal.fire(\"Error\", \"No se pudo enviar el correo. Intenta nuevamente.\", \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enviar correo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), !showRecuperarContraseña ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSendEmail();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Ingresa tu correo\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClose,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(RecuperarContraseña, {\n      email: email,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(FormSendEmail, \"SLB8LqdcgtTNYq1SGdW9gr5xB1U=\");\n_c = FormSendEmail;\nexport default FormSendEmail;\nvar _c;\n$RefreshReg$(_c, \"FormSendEmail\");","map":{"version":3,"names":["React","useState","Swal","RecuperarContraseña","jsxDEV","_jsxDEV","FormSendEmail","onClose","_s","email","setEmail","showRecuperarContraseña","setShowRecuperarContraseña","handleSendEmail","response","fetch","method","headers","body","JSON","stringify","data","json","ok","fire","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/home/juancarlos/Documentos/react/reactProjects/agendapp/client/src/components/FormSendEmail.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport RecuperarContraseña from \"./RecuperarContraseña\"; // Asegúrate de tener este componente\n\nfunction FormSendEmail({ onClose }) {\n    const [email, setEmail] = useState(\"\");\n    const [showRecuperarContraseña, setShowRecuperarContraseña] = useState(false);\n\n    const handleSendEmail = async () => {\n        try {\n            const response = await fetch(\"http://localhost:4000/api/users/send-recovery-code\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ email }),\n            });\n\n            const data = await response.json();\n            if (response.ok) {\n                Swal.fire(\"Correo Enviado\", \"Revisa tu correo para el código de recuperación.\", \"success\");\n                setShowRecuperarContraseña(true); // Mostrar el formulario para ingresar el código\n            } else {\n                Swal.fire(\"Error\", data.message, \"error\");\n            }\n        } catch (error) {\n            console.error(\"Error al enviar el correo:\", error);\n            Swal.fire(\"Error\", \"No se pudo enviar el correo. Intenta nuevamente.\", \"error\");\n        }\n    };\n\n    return (\n        <div>\n            <h1>Enviar correo</h1>\n            {!showRecuperarContraseña ? (\n                <form onSubmit={(e) => { e.preventDefault(); handleSendEmail(); }}>\n                    <input\n                        type=\"email\"\n                        placeholder=\"Ingresa tu correo\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                    <button type=\"submit\">Enviar</button>\n                    <button type=\"button\" onClick={onClose}>Cancelar</button>\n                </form>\n            ) : (\n                <RecuperarContraseña email={email} onClose={onClose} />\n            )}\n        </div>\n    );\n}\n\nexport default FormSendEmail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}