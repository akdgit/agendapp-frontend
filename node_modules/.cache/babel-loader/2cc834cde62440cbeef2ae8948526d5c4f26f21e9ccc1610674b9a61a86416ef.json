{"ast":null,"code":"var _jsxFileName = \"/home/juancarlos/Documentos/react/reactProjects/agendapp/client/src/components/Formlogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport FormSendEmail from \"./FormSendEmail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Formlogin(props) {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const [showFormSendEmail, setShowFormSendEmail] = useState(false);\n  const BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:4000\";\n  const handleCheckActiveStatus = async () => {\n    if (!email) {\n      console.log(\"No email provided\"); // Debugging\n      return;\n    }\n    try {\n      console.log(\"Checking active status for email:\", email); // Debugging\n      const response = await fetch(`${BASE_URL}/api/users/check-active`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        }) // Enviando correctamente el email\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        console.error(data.message);\n        return;\n      }\n      if (!data.active) {\n        const result = await Swal.fire({\n          title: \"Su cuenta está desactivada\",\n          text: \"¿Desea activarla nuevamente?\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonText: \"Sí\",\n          cancelButtonText: \"No\"\n        });\n        if (result.isConfirmed) {\n          console.log(\"Activating account for email:\", email); // Debugging\n\n          // **Solución: Asegurarte que el email esté correctamente codificado**\n          const encodedEmail = encodeURIComponent(email);\n          const activateResponse = await fetch(`${BASE_URL}/api/users/activate/${encodedEmail}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n          const activateData = await activateResponse.json();\n          if (activateResponse.ok) {\n            Swal.fire(\"Cuenta activada\", \"Su cuenta ha sido reactivada. Para acceder, ingrese sus credenciales\", \"success\");\n          } else {\n            Swal.fire(\"Error\", \"Error al activar la cuenta.\", \"error\");\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Error al verificar el estado de la cuenta:\", error);\n      Swal.fire(\"Error\", \"Error al verificar el estado de la cuenta.\", \"error\");\n    }\n  };\n  const handleShowFormSendEmail = () => {\n    setShowFormSendEmail(true);\n  };\n  const handleCloseFormSendEmail = () => {\n    setShowFormSendEmail(false);\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${BASE_URL}/api/users/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Guardar el token en localStorage o context\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"userId\", data.user.id);\n        localStorage.setItem(\"username\", data.user.name);\n        // Redirigir a la nueva página\n        navigate(\"/diary\");\n      } else {\n        if (response.status === 403) {\n          const result = await Swal.fire({\n            title: \"Su cuenta está desactivada\",\n            text: \"¿Desea activarla nuevamente?\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonText: \"Sí\",\n            cancelButtonText: \"No\"\n          });\n          if (result.isConfirmed) {\n            console.log(\"Activating account for email:\", email); // Debugging\n\n            const encodedEmail = encodeURIComponent(email);\n            const activateResponse = await fetch(`${BASE_URL}/api/users/activate/${encodedEmail}`, {\n              method: \"PATCH\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            });\n            if (activateResponse.ok) {\n              Swal.fire(\"Cuenta activada\", \"Su cuenta ha sido reactivada. Para acceder, ingrese sus credenciales\", \"success\");\n            } else {\n              Swal.fire(\"Error\", \"Error al activar la cuenta.\", \"error\");\n            }\n          }\n        } else {\n          Swal.fire(\"Error\", data.message, \"error\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error durante el login:\", error);\n      Swal.fire(\"Error\", \"Ocurrió un error. Por favor intente de nuevo más tarde.\", \"error\");\n    }\n  };\n\n  /*const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n        const response = await fetch(\"${BASE_URL}/api/users/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ email, password }),\n        });\n         const data = await response.json();\n        if (response.ok) {\n            // Guardar el token en localStorage o context\n            localStorage.setItem(\"token\", data.token);\n            localStorage.setItem(\"userId\", data.user.id); \n            localStorage.setItem(\"username\", data.user.name);\n            // Redirigir a la nueva página\n            navigate(\"/diary\");\n        } else {\n            // Manejar error cuando la cuenta está desactivada\n            if (response.status === 403) {\n                Swal.fire(\"Cuenta desactivada\", data.message, \"warning\");\n            } else {\n                Swal.fire(\"Error\", data.message, \"error\");\n            }\n        }\n    } catch (error) {\n        console.error(\"Error during login:\", error);\n        Swal.fire(\"Error\", \"Ocurrió un error. Por favor intente de nuevo más tarde.\", \"error\");\n    }\n  };*/\n\n  /*const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"${BASE_URL}/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n       const data = await response.json();\n      if (response.ok) {\n        // Guardar el token en localStorage o context\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"userId\", data.user.id); \n        localStorage.setItem(\"username\", data.user.name);\n        // Redirigir a la nueva página\n        navigate(\"/diary\");\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      alert(\"An error occurred. Please try again later.\");\n    }\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-login\",\n    children: showFormSendEmail ? /*#__PURE__*/_jsxDEV(FormSendEmail, {\n      onClose: handleCloseFormSendEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-login\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \" Comienza a planificar tu d\\xEDa \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-field\",\n          type: \"text\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          onBlur: handleCheckActiveStatus,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Email de usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-field\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        type: \"submit\",\n        children: props.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: handleShowFormSendEmail,\n        type: \"button\",\n        children: \"\\xBFOlvidaste tu contrase\\xF1a?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"regmes\",\n        children: [props.messageReg, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"register-button\",\n          type: \"button\",\n          onClick: () => navigate(\"/register\"),\n          children: props.register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n_s(Formlogin, \"fVnqFuyqIBsv8FX3tkewyyqR/g0=\", false, function () {\n  return [useNavigate];\n});\n_c = Formlogin;\n;\nexport default Formlogin;\nvar _c;\n$RefreshReg$(_c, \"Formlogin\");","map":{"version":3,"names":["React","useState","useNavigate","Swal","FormSendEmail","jsxDEV","_jsxDEV","Formlogin","props","_s","email","setEmail","password","setPassword","navigate","showFormSendEmail","setShowFormSendEmail","BASE_URL","process","env","REACT_APP_BASE_URL","handleCheckActiveStatus","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","message","active","result","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","encodedEmail","encodeURIComponent","activateResponse","activateData","handleShowFormSendEmail","handleCloseFormSendEmail","handleLogin","e","preventDefault","localStorage","setItem","token","user","id","name","status","className","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","onBlur","required","login","onClick","messageReg","register","_c","$RefreshReg$"],"sources":["/home/juancarlos/Documentos/react/reactProjects/agendapp/client/src/components/Formlogin.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport FormSendEmail from \"./FormSendEmail\";\n\nfunction Formlogin(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const [showFormSendEmail, setShowFormSendEmail] = useState(false);\n  const BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:4000\";\n  \n   const handleCheckActiveStatus = async () => {\n    if (!email) {\n      console.log(\"No email provided\");  // Debugging\n      return;\n    }\n\n    try {\n      console.log(\"Checking active status for email:\", email);  // Debugging\n      const response = await fetch(`${BASE_URL}/api/users/check-active`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email }), // Enviando correctamente el email\n      });\n\n      const data = await response.json();\n      if (!response.ok) {\n        console.error(data.message);\n        return;\n      }\n\n      if (!data.active) {\n        const result = await Swal.fire({\n          title: \"Su cuenta está desactivada\",\n          text: \"¿Desea activarla nuevamente?\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonText: \"Sí\",\n          cancelButtonText: \"No\",\n        });\n\n        if (result.isConfirmed) {\n          console.log(\"Activating account for email:\", email);  // Debugging\n          \n          // **Solución: Asegurarte que el email esté correctamente codificado**\n          const encodedEmail = encodeURIComponent(email);\n          const activateResponse = await fetch(`${BASE_URL}/api/users/activate/${encodedEmail}`, {\n            method: \"PATCH\",\n            headers: { \"Content-Type\": \"application/json\" },\n          });\n\n          const activateData = await activateResponse.json();\n          if (activateResponse.ok) {\n            Swal.fire(\"Cuenta activada\", \"Su cuenta ha sido reactivada. Para acceder, ingrese sus credenciales\", \"success\");\n          } else {\n            Swal.fire(\"Error\", \"Error al activar la cuenta.\", \"error\");\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Error al verificar el estado de la cuenta:\", error);\n      Swal.fire(\"Error\", \"Error al verificar el estado de la cuenta.\", \"error\");\n    }\n  };\n\n  const handleShowFormSendEmail = () => {\n    setShowFormSendEmail(true);\n  };\n\n  const handleCloseFormSendEmail = () => {\n    setShowFormSendEmail(false);\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n        const response = await fetch(`${BASE_URL}/api/users/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ email, password }),\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n            // Guardar el token en localStorage o context\n            localStorage.setItem(\"token\", data.token);\n            localStorage.setItem(\"userId\", data.user.id); \n            localStorage.setItem(\"username\", data.user.name);\n            // Redirigir a la nueva página\n            navigate(\"/diary\");\n        } else {\n            if (response.status === 403) {\n                const result = await Swal.fire({\n                    title: \"Su cuenta está desactivada\",\n                    text: \"¿Desea activarla nuevamente?\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonText: \"Sí\",\n                    cancelButtonText: \"No\",\n                });\n\n                if (result.isConfirmed) {\n                    console.log(\"Activating account for email:\", email);  // Debugging\n\n                    const encodedEmail = encodeURIComponent(email);\n                    const activateResponse = await fetch(`${BASE_URL}/api/users/activate/${encodedEmail}`, {\n                        method: \"PATCH\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                    });\n\n                    if (activateResponse.ok) {\n                        Swal.fire(\"Cuenta activada\", \"Su cuenta ha sido reactivada. Para acceder, ingrese sus credenciales\", \"success\");\n                    } else {\n                        Swal.fire(\"Error\", \"Error al activar la cuenta.\", \"error\");\n                    }\n                }\n            } else {\n                Swal.fire(\"Error\", data.message, \"error\");\n            }\n        }\n    } catch (error) {\n        console.error(\"Error durante el login:\", error);\n        Swal.fire(\"Error\", \"Ocurrió un error. Por favor intente de nuevo más tarde.\", \"error\");\n    }\n};\n\n  /*const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n        const response = await fetch(\"${BASE_URL}/api/users/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ email, password }),\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n            // Guardar el token en localStorage o context\n            localStorage.setItem(\"token\", data.token);\n            localStorage.setItem(\"userId\", data.user.id); \n            localStorage.setItem(\"username\", data.user.name);\n            // Redirigir a la nueva página\n            navigate(\"/diary\");\n        } else {\n            // Manejar error cuando la cuenta está desactivada\n            if (response.status === 403) {\n                Swal.fire(\"Cuenta desactivada\", data.message, \"warning\");\n            } else {\n                Swal.fire(\"Error\", data.message, \"error\");\n            }\n        }\n    } catch (error) {\n        console.error(\"Error during login:\", error);\n        Swal.fire(\"Error\", \"Ocurrió un error. Por favor intente de nuevo más tarde.\", \"error\");\n    }\n};*/\n\n\n  /*const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"${BASE_URL}/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        // Guardar el token en localStorage o context\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"userId\", data.user.id); \n        localStorage.setItem(\"username\", data.user.name);\n        // Redirigir a la nueva página\n        navigate(\"/diary\");\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      alert(\"An error occurred. Please try again later.\");\n    }\n  };*/\n\n  return (\n    <div className=\"content-login\">\n      {showFormSendEmail ? (\n        <FormSendEmail onClose={handleCloseFormSendEmail} />\n      ): (\n        <form className=\"form-login\" onSubmit={handleLogin}>\n          <h1 className=\"title\"> Comienza a planificar tu día </h1>\n          <p>{props.message}</p>\n          <div className=\"input-container\">\n            <input \n              className=\"input-field\" \n              type=\"text\" \n              value={email} \n              onChange={(e) => setEmail(e.target.value)}\n              onBlur={handleCheckActiveStatus} \n              required\n            />\n            <label className=\"input-label\">Email de usuario</label>\n          </div>\n          \n          <div className=\"input-container\">\n            <input \n              className=\"input-field\" \n              type=\"password\" \n              value={password} \n              onChange={(e) => setPassword(e.target.value)} \n              required\n            />\n            <label className=\"input-label\">Contraseña</label>\n          </div>\n\n          <button className=\"login-button\" type=\"submit\">{props.login}</button>\n          <span\n            onClick={handleShowFormSendEmail}\n            type=\"button\"\n          >\n            ¿Olvidaste tu contraseña?\n          </span>\n          <p className=\"regmes\">\n            {props.messageReg}\n            <button \n              className=\"register-button\" \n              type=\"button\" \n              onClick={() => navigate(\"/register\")}\n            >\n              {props.register}\n            </button>\n          </p>\n      </form>\n      )}\n    </div>\n  )\n};\n\nexport default Formlogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}