{"ast":null,"code":"var _jsxFileName = \"/home/juancarlos/Documentos/react/reactProjects/agendapp/client/src/components/FormRecoveryPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport \"./styles/FormRecoveryPassword.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecuperarContraseña({\n  email,\n  onClose,\n  initialRecoveryCode\n}) {\n  _s();\n  const [enteredCode, setEnteredCode] = useState(\"\");\n  const [recoveryCode, setRecoveryCode] = useState(initialRecoveryCode); // Manejo interno del código de recuperación\n  const [isCodeCorrect, setIsCodeCorrect] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  // Verificar el código al ingresar los cuatro dígitos\n  useEffect(() => {\n    if (enteredCode.length === 4) {\n      console.log(\"Código generado (actualizado):\", recoveryCode);\n      console.log(\"Código ingresado por el usuario:\", enteredCode);\n      if (enteredCode === recoveryCode) {\n        setIsCodeCorrect(true);\n        Swal.fire(\"Éxito\", \"Código correcto. Ahora puedes ingresar tu nueva contraseña.\", \"success\");\n      } else {\n        setIsCodeCorrect(false);\n        Swal.fire(\"Error\", \"Código incorrecto. Intenta de nuevo.\", \"error\");\n      }\n    }\n  }, [enteredCode, recoveryCode]);\n  const handleCodeChange = e => {\n    const value = e.target.value;\n    if (/^\\d{0,4}$/.test(value)) {\n      setEnteredCode(value);\n    }\n  };\n  const handleResendCode = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/api/users/check-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.exists) {\n        const sendCodeResponse = await fetch(\"http://localhost:4000/api/users/send-recovery-code\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email\n          })\n        });\n        if (sendCodeResponse.ok) {\n          const newCode = (await sendCodeResponse.json()).recoveryCode; // Recupera el nuevo código de la respuesta\n          setRecoveryCode(newCode); // Actualiza el código en el estado\n          Swal.fire(\"Código Reenviado\", \"Revisa tu correo para el nuevo código de recuperación.\", \"success\");\n        } else {\n          Swal.fire(\"Error\", \"No se pudo enviar el código. Intenta nuevamente.\", \"error\");\n        }\n      } else {\n        Swal.fire(\"Error\", \"El correo no está registrado.\", \"error\");\n      }\n    } catch (error) {\n      console.error(\"Error al reenviar el código:\", error);\n      Swal.fire(\"Error\", \"No se pudo reenviar el código. Intenta nuevamente.\", \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recovery\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-recovery\",\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recuperar Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ingresa el c\\xF3digo recibido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        pattern: \"[0-9]{0,4}\",\n        value: enteredCode,\n        onChange: handleCodeChange,\n        maxLength: 4,\n        className: \"code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xBFNo has recibido tu c\\xF3digo? Int\\xE9ntalo de nuevo.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleResendCode,\n        children: \"Reenviar c\\xF3digo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), isCodeCorrect && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Nueva Contrase\\xF1a\",\n          className: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          placeholder: \"Confirmar Contrase\\xF1a\",\n          className: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Cambiar Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onClose,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(RecuperarContraseña, \"7RQpleqy951XI7wwP5ce+OPRpDQ=\");\n_c = RecuperarContraseña;\nexport default RecuperarContraseña;\nvar _c;\n$RefreshReg$(_c, \"RecuperarContrase\\xF1a\");","map":{"version":3,"names":["React","useState","useEffect","Swal","jsxDEV","_jsxDEV","Fragment","_Fragment","RecuperarContraseña","email","onClose","initialRecoveryCode","_s","enteredCode","setEnteredCode","recoveryCode","setRecoveryCode","isCodeCorrect","setIsCodeCorrect","password","setPassword","confirmPassword","setConfirmPassword","length","console","log","fire","handleCodeChange","e","value","target","test","handleResendCode","response","fetch","method","headers","body","JSON","stringify","data","json","ok","exists","sendCodeResponse","newCode","error","className","children","onSubmit","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","type","pattern","onChange","maxLength","onClick","placeholder","required","_c","$RefreshReg$"],"sources":["/home/juancarlos/Documentos/react/reactProjects/agendapp/client/src/components/FormRecoveryPassword.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport \"./styles/FormRecoveryPassword.css\";\n\nfunction RecuperarContraseña({ email, onClose, initialRecoveryCode }) {\n    const [enteredCode, setEnteredCode] = useState(\"\");\n    const [recoveryCode, setRecoveryCode] = useState(initialRecoveryCode); // Manejo interno del código de recuperación\n    const [isCodeCorrect, setIsCodeCorrect] = useState(false);\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    // Verificar el código al ingresar los cuatro dígitos\n    useEffect(() => {\n        if (enteredCode.length === 4) {\n            console.log(\"Código generado (actualizado):\", recoveryCode);\n            console.log(\"Código ingresado por el usuario:\", enteredCode);\n\n            if (enteredCode === recoveryCode) {\n                setIsCodeCorrect(true);\n                Swal.fire(\"Éxito\", \"Código correcto. Ahora puedes ingresar tu nueva contraseña.\", \"success\");\n            } else {\n                setIsCodeCorrect(false);\n                Swal.fire(\"Error\", \"Código incorrecto. Intenta de nuevo.\", \"error\");\n            }\n        }\n    }, [enteredCode, recoveryCode]);\n\n    const handleCodeChange = (e) => {\n        const value = e.target.value;\n        if (/^\\d{0,4}$/.test(value)) {\n            setEnteredCode(value);\n        }\n    };\n\n    const handleResendCode = async () => {\n        try {\n            const response = await fetch(\"http://localhost:4000/api/users/check-email\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ email }),\n            });\n\n            const data = await response.json();\n            if (response.ok && data.exists) {\n                const sendCodeResponse = await fetch(\"http://localhost:4000/api/users/send-recovery-code\", {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({ email }),\n                });\n\n                if (sendCodeResponse.ok) {\n                    const newCode = (await sendCodeResponse.json()).recoveryCode; // Recupera el nuevo código de la respuesta\n                    setRecoveryCode(newCode); // Actualiza el código en el estado\n                    Swal.fire(\"Código Reenviado\", \"Revisa tu correo para el nuevo código de recuperación.\", \"success\");\n                } else {\n                    Swal.fire(\"Error\", \"No se pudo enviar el código. Intenta nuevamente.\", \"error\");\n                }\n            } else {\n                Swal.fire(\"Error\", \"El correo no está registrado.\", \"error\");\n            }\n        } catch (error) {\n            console.error(\"Error al reenviar el código:\", error);\n            Swal.fire(\"Error\", \"No se pudo reenviar el código. Intenta nuevamente.\", \"error\");\n        }\n    };\n\n    return (\n        <div className=\"recovery\">\n            <form className=\"form-recovery\" onSubmit={(e) => e.preventDefault()}>\n                <h1>Recuperar Contraseña</h1>\n                <p>Ingresa el código recibido</p>\n                <input\n                    type=\"number\"\n                    pattern=\"[0-9]{0,4}\"\n                    value={enteredCode}\n                    onChange={handleCodeChange}\n                    maxLength={4}\n                    className=\"code\"\n                />\n                <p>¿No has recibido tu código? Inténtalo de nuevo.</p>\n                <button type=\"button\" onClick={handleResendCode}>Reenviar código</button>\n                {isCodeCorrect && (\n                    <>\n                        <input\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            placeholder=\"Nueva Contraseña\"\n                            className=\"pass\"\n                            required\n                        />\n                        <input\n                            type=\"password\"\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                            placeholder=\"Confirmar Contraseña\"\n                            className=\"pass\"\n                            required\n                        />\n                        <button type=\"submit\">Cambiar Contraseña</button>\n                        <button type=\"button\" onClick={onClose}>Cancelar</button>\n                    </>\n                )}\n            </form>\n        </div>\n    );\n}\n\nexport default RecuperarContraseña;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}