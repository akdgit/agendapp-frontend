{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault(); // Evita el comportamiento predeterminado del formulario\n\n  // Validar que ambas contraseñas coincidan\n  if (password !== confirmPassword) {\n    Swal.fire(\"Error\", \"Las contraseñas no coinciden. Intenta nuevamente.\", \"error\");\n    return; // Detén la ejecución si las contraseñas no coinciden\n  }\n  try {\n    const updates = {\n      password\n    };\n    const response = await fetch(`http://localhost:4000/api/users/${userId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updates)\n    });\n    if (response.ok) {\n      await Swal.fire(\"Éxito\", \"Tu contraseña ha sido actualizada correctamente.\", \"success\");\n      onClose(); // Cierra el formulario al completar\n    } else {\n      Swal.fire(\"Error\", \"No se pudo actualizar la contraseña. Intenta nuevamente.\", \"error\");\n    }\n  } catch (error) {\n    console.error(\"Error al actualizar la contraseña:\", error);\n    Swal.fire(\"Error\", \"Error al conectar con el servidor. Intenta nuevamente.\", \"error\");\n  }\n};\nconst handleClose = e => {\n  e.preventDefault(); // Evita la validación o cualquier acción relacionada al formulario\n  setPassword(\"\"); // Limpia el estado de contraseña\n  setConfirmPassword(\"\"); // Limpia el estado de confirmación\n  onClose(); // Cierra el formulario\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","password","confirmPassword","Swal","fire","updates","response","fetch","userId","method","headers","body","JSON","stringify","ok","onClose","error","console","handleClose","setPassword","setConfirmPassword"],"sources":["/home/juancarlos/Documentos/react/reactProjects/agendapp/client/src/components/ChangePasswordForm.js"],"sourcesContent":["const handleSubmit = async (e) => {\n    e.preventDefault(); // Evita el comportamiento predeterminado del formulario\n\n    // Validar que ambas contraseñas coincidan\n    if (password !== confirmPassword) {\n        Swal.fire(\"Error\", \"Las contraseñas no coinciden. Intenta nuevamente.\", \"error\");\n        return; // Detén la ejecución si las contraseñas no coinciden\n    }\n\n    try {\n        const updates = { password };\n        const response = await fetch(`http://localhost:4000/api/users/${userId}`, {\n            method: \"PATCH\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(updates),\n        });\n\n        if (response.ok) {\n            await Swal.fire(\"Éxito\", \"Tu contraseña ha sido actualizada correctamente.\", \"success\");\n            onClose(); // Cierra el formulario al completar\n        } else {\n            Swal.fire(\"Error\", \"No se pudo actualizar la contraseña. Intenta nuevamente.\", \"error\");\n        }\n    } catch (error) {\n        console.error(\"Error al actualizar la contraseña:\", error);\n        Swal.fire(\"Error\", \"Error al conectar con el servidor. Intenta nuevamente.\", \"error\");\n    }\n};\n\nconst handleClose = (e) => {\n    e.preventDefault(); // Evita la validación o cualquier acción relacionada al formulario\n    setPassword(\"\"); // Limpia el estado de contraseña\n    setConfirmPassword(\"\"); // Limpia el estado de confirmación\n    onClose(); // Cierra el formulario\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEpB;EACA,IAAIC,QAAQ,KAAKC,eAAe,EAAE;IAC9BC,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE,mDAAmD,EAAE,OAAO,CAAC;IAChF,OAAO,CAAC;EACZ;EAEA,IAAI;IACA,MAAMC,OAAO,GAAG;MAAEJ;IAAS,CAAC;IAC5B,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCC,MAAM,EAAE,EAAE;MACtEC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;IAChC,CAAC,CAAC;IAEF,IAAIC,QAAQ,CAACQ,EAAE,EAAE;MACb,MAAMX,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE,kDAAkD,EAAE,SAAS,CAAC;MACvFW,OAAO,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,MAAM;MACHZ,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE,0DAA0D,EAAE,OAAO,CAAC;IAC3F;EACJ,CAAC,CAAC,OAAOY,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1Db,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE,wDAAwD,EAAE,OAAO,CAAC;EACzF;AACJ,CAAC;AAED,MAAMc,WAAW,GAAInB,CAAC,IAAK;EACvBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;EACpBmB,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;EACjBC,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC;EACxBL,OAAO,CAAC,CAAC,CAAC,CAAC;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}