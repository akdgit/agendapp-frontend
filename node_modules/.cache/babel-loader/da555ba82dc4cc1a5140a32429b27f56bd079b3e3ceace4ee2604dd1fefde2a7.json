{"ast":null,"code":"var _jsxFileName = \"/home/juancarlos/Documentos/react/reactProjects/agendapp/client/src/components/FormUpdateUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateUserForm({\n  userId,\n  onClose\n}) {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [fullname, setFullname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n\n  // Obtener los datos del usuario al montar el componente\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/users/${userId}`);\n        const data = await response.json();\n        if (response.ok) {\n          setName(data.name);\n          setFullname(data.fullname);\n          setEmail(data.email);\n        } else {\n          console.error(\"Error fetching user data:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    if (userId) fetchUserData();\n  }, [userId]);\n\n  // Manejar el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    try {\n      const updates = {\n        name,\n        fullname,\n        email,\n        password\n      };\n      const response = await fetch(`http://localhost:4000/api/users/${userId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updates)\n      });\n      if (response.ok) {\n        alert(\"Perfil actualizado exitosamente\");\n        const updatedUser = await response.json();\n        localStorage.setItem(\"username\", name); // Actualiza el nombre en localStorage\n        onClose(); // Cierra el formulario\n        navigate(\"/diary\"); // Redirige a la pantalla de tareas\n      } else {\n        console.error(\"Error updating user:\", response.status);\n        alert(\"Error al actualizar el perfil\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Error al conectar con el servidor\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-user\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-update-user\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Actualizar perfil \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Nombre:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Nombres\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Apellido:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: fullname,\n          onChange: e => setFullname(e.target.value),\n          placeholder: \"Apellidos\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Correo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Direcci\\xF3n de correo\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Clave:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Clave de acceso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: \"Actualizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"cancel-button\",\n        type: \"button\",\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateUserForm, \"0evVyZ0QFiDQybNHfTCMcTSyK+U=\", false, function () {\n  return [useNavigate];\n});\n_c = UpdateUserForm;\nexport default UpdateUserForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateUserForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","UpdateUserForm","userId","onClose","_s","name","setName","fullname","setFullname","email","setEmail","password","setPassword","isSubmitting","setIsSubmitting","navigate","fetchUserData","response","fetch","data","json","ok","console","error","handleSubmit","e","preventDefault","updates","method","headers","body","JSON","stringify","alert","updatedUser","localStorage","setItem","status","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/juancarlos/Documentos/react/reactProjects/agendapp/client/src/components/FormUpdateUser.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction UpdateUserForm({ userId, onClose }) {\n    const [name, setName] = useState(\"\");\n    const [fullname, setFullname] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const navigate = useNavigate();\n\n    // Obtener los datos del usuario al montar el componente\n    useEffect(() => {\n        const fetchUserData = async () => {\n            try {\n                const response = await fetch(`http://localhost:4000/api/users/${userId}`);\n                const data = await response.json();\n                if (response.ok) {\n                    setName(data.name);\n                    setFullname(data.fullname);\n                    setEmail(data.email);\n                } else {\n                    console.error(\"Error fetching user data:\", data);\n                }\n            } catch (error) {\n                console.error(\"Error:\", error);\n            }\n        };\n\n        if (userId) fetchUserData();\n    }, [userId]);\n\n    // Manejar el envío del formulario\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setIsSubmitting(true);\n\n        try {\n            const updates = { name, fullname, email, password };\n            const response = await fetch(`http://localhost:4000/api/users/${userId}`, {\n                method: \"PATCH\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(updates),\n            });\n\n            if (response.ok) {\n                alert(\"Perfil actualizado exitosamente\");\n                const updatedUser = await response.json();\n                localStorage.setItem(\"username\", name); // Actualiza el nombre en localStorage\n                onClose(); // Cierra el formulario\n                navigate(\"/diary\"); // Redirige a la pantalla de tareas\n            } else {\n                console.error(\"Error updating user:\", response.status);\n                alert(\"Error al actualizar el perfil\");\n            }\n        } catch (error) {\n            console.error(\"Error:\", error);\n            alert(\"Error al conectar con el servidor\");\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    return (\n        <div className=\"update-user\">\n            <form className=\"form-update-user\" onSubmit={handleSubmit}>\n                <p> Actualizar perfil </p>\n                <label>\n                    Nombre:\n                    <input\n                        type=\"text\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        placeholder=\"Nombres\"\n                        required\n                    />\n                </label>\n                <label>\n                    Apellido:\n                    <input\n                        type=\"text\"\n                        value={fullname}\n                        onChange={(e) => setFullname(e.target.value)}\n                        placeholder=\"Apellidos\"\n                        required\n                    />\n                </label>\n                <label>\n                    Correo:\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        placeholder=\"Dirección de correo\"\n                        required\n                    />\n                </label>\n                <label>\n                    Clave:\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        placeholder=\"Clave de acceso\"\n                    />\n                </label>\n                <button type=\"submit\" disabled={isSubmitting}>\n                    Actualizar\n                </button>\n                <button\n                    onClick={onClose}\n                    className=\"cancel-button\"\n                    type=\"button\"\n                >\n                    Cancelar\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default UpdateUserForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}