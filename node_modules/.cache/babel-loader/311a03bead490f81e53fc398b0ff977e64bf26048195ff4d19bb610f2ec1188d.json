{"ast":null,"code":"var _jsxFileName = \"/home/juancarlos/Documentos/react/reactProjects/agendapp/client/src/components/ChangePasswordForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles/FormUpdateUser.css\"; // Asegúrate de agregar los estilos aquí.\nimport Swal from \"sweetalert2\";\nimport { SiEditorconfig } from \"react-icons/si\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateUserForm({\n  userId,\n  onClose\n}) {\n  _s();\n  const [password, setPassword] = useState(\"\"); // Puede ser opcional\n  const [confirmPassword, setConfirmPasseord] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n\n  // **Obtener los datos del usuario al montar el componente**\n  /*useEffect(() => {\n      const fetchUserData = async () => {\n          try {\n              const response = await fetch(`http://localhost:4000/api/users/${userId}`);\n              const data = await response.json();\n              if (response.ok && data.length > 0) {\n                  setName(data[0].name);\n                  setFullname(data[0].fullname);\n                  setEmail(data[0].email);\n                  //setPassword(data[0].password);\n              } else {\n                  console.error(\"Error al obtener los datos del usuario:\", data);\n                  alert(\"No se pudo cargar la información del usuario\");\n              }\n          } catch (error) {\n              console.error(\"Error al conectar con el servidor:\", error);\n              alert(\"Error al conectar con el servidor\");\n          }\n      };\n       if (userId) fetchUserData(); // Solo obtener los datos si hay un userId válido\n  }, [userId]);*/\n\n  // **Manejar el envío del formulario para actualizar los datos**\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    if (password !== confirmPassword) {\n      Swal.fire(\"Error\", \"No coinciden las contraseñas ingresadas.\", \"error\");\n    }\n    try {\n      const updates = {\n        password\n      };\n      const response = await fetch(`http://localhost:4000/api/users/${userId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updates)\n      });\n      if (response.ok) {\n        const updatedUser = await response.json();\n        onClose(); // Cierra el formulario\n        await Swal.fire(\"Éxito\", \"Contraseña actualizada correctamente.\", \"success\");\n        navigate(\"/diary\");\n      } else {\n        Swal.fire(\"Error\", \"Error al actualizar el perfil.\", \"error\");\n      }\n    } catch (error) {\n      console.error(\"Error al conectar con el servidor:\", error);\n      Swal.fire(\"Error\", \"Error al conectar con el servidor.\", \"error\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay1\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-user\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-update-user\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Actualizar Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Nueva contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Nueva contrase\\xF1a\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Confitmar contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPasseord(e.target.value),\n            placeholder: \"Vuelva a ingresar du contrase\\xF1a\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isSubmitting,\n          type: \"submit\",\n          children: isSubmitting ? \"Actualizando...\" : \"Actualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"cancel-button\",\n          type: \"button\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateUserForm, \"AqD3DR1VtrVbZtyCY7OA+FPZuxA=\", false, function () {\n  return [useNavigate];\n});\n_c = UpdateUserForm;\nexport default UpdateUserForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateUserForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Swal","SiEditorconfig","jsxDEV","_jsxDEV","UpdateUserForm","userId","onClose","_s","password","setPassword","confirmPassword","setConfirmPasseord","isSubmitting","setIsSubmitting","navigate","handleSubmit","e","preventDefault","fire","updates","response","fetch","method","headers","body","JSON","stringify","ok","updatedUser","json","error","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/juancarlos/Documentos/react/reactProjects/agendapp/client/src/components/ChangePasswordForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles/FormUpdateUser.css\"; // Asegúrate de agregar los estilos aquí.\nimport Swal from \"sweetalert2\";\nimport { SiEditorconfig } from \"react-icons/si\";\n\nfunction UpdateUserForm({ userId, onClose }) {\n    const [password, setPassword] = useState(\"\"); // Puede ser opcional\n    const [confirmPassword, setConfirmPasseord] = useState(\"\");\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const navigate = useNavigate();\n\n    // **Obtener los datos del usuario al montar el componente**\n    /*useEffect(() => {\n        const fetchUserData = async () => {\n            try {\n                const response = await fetch(`http://localhost:4000/api/users/${userId}`);\n                const data = await response.json();\n                if (response.ok && data.length > 0) {\n                    setName(data[0].name);\n                    setFullname(data[0].fullname);\n                    setEmail(data[0].email);\n                    //setPassword(data[0].password);\n                } else {\n                    console.error(\"Error al obtener los datos del usuario:\", data);\n                    alert(\"No se pudo cargar la información del usuario\");\n                }\n            } catch (error) {\n                console.error(\"Error al conectar con el servidor:\", error);\n                alert(\"Error al conectar con el servidor\");\n            }\n        };\n\n        if (userId) fetchUserData(); // Solo obtener los datos si hay un userId válido\n    }, [userId]);*/\n\n    // **Manejar el envío del formulario para actualizar los datos**\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setIsSubmitting(true);\n        if (password !== confirmPassword) {\n            Swal.fire(\"Error\", \"No coinciden las contraseñas ingresadas.\", \"error\");\n        }\n        try {\n            const updates = { password };\n            const response = await fetch(`http://localhost:4000/api/users/${userId}`, {\n                method: \"PATCH\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(updates),\n            });\n    \n            if (response.ok) {\n                const updatedUser = await response.json();\n                onClose(); // Cierra el formulario\n                await Swal.fire(\"Éxito\", \"Contraseña actualizada correctamente.\", \"success\");\n                navigate(\"/diary\");\n            } else {\n                Swal.fire(\"Error\", \"Error al actualizar el perfil.\", \"error\");\n            }\n        } catch (error) {\n            console.error(\"Error al conectar con el servidor:\", error);\n            Swal.fire(\"Error\", \"Error al conectar con el servidor.\", \"error\");\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n    \n    return (\n        <div className=\"overlay1\"> {/* Superposición para desactivar el resto de la pantalla */}\n            <div className=\"update-user\">\n                <form className=\"form-update-user\" onSubmit={handleSubmit}>\n                    <p>Actualizar Contraseña</p>\n                    <label>\n                        Nueva contraseña:\n                        <input\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            placeholder=\"Nueva contraseña\"\n                            required\n                        />\n                    </label>\n                    <label>\n                        Confitmar contraseña:\n                        <input\n                            type=\"password\"\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPasseord(e.target.value)}\n                            placeholder=\"Vuelva a ingresar du contraseña\"\n                            required\n                        />\n                    </label>\n                    <button \n                    disabled={isSubmitting}\n                    type=\"submit\" \n                    >\n                        {isSubmitting ? \"Actualizando...\" : \"Actualizar\"}\n                    </button>\n                    <button\n                        onClick={onClose}\n                        className=\"cancel-button\"\n                        type=\"button\"\n                    >\n                        Cancelar\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default UpdateUserForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}